name: DQ Checks

on:
  pull_request:
    branches:
      - master
      - beta
  release:
    types:
      - created
  push:
    branches:
      - master
  merge_group:
    types:
      - checks_requested

permissions:
  contents: read

jobs:
  build:
    uses: miracum/.github/.github/workflows/standard-build.yaml@9e83a2b0b2e5681d913d4decdd18ac4ad6a6091c # v1.18.0
    permissions:
      contents: write
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      build-context: dq/
      enable-build-test-layer: false
      enable-upload-test-image: false
      image: "ghcr.io/${{ github.repository }}-dq-checks"
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  run-gx-checks:
    name: run dq checks
    runs-on: ubuntu-24.04
    needs:
      - build
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit # change to 'egress-policy: block' after couple of runs

      # <https://docs.docker.com/storage/containerd/>
      # via <https://github.com/docker/setup-buildx-action/issues/257>
      - name: Set up containerd image store
        shell: bash
        run: |
          [ -f /etc/docker/daemon.json ] || echo "{}" | sudo tee /etc/docker/daemon.json
          jq '. | .+{"features": {"containerd-snapshotter": true}}' /etc/docker/daemon.json > /tmp/docker-daemon-with-containerd.json
          sudo mv /tmp/docker-daemon-with-containerd.json /etc/docker/daemon.json
          cat /etc/docker/daemon.json
          sudo systemctl restart docker
          docker info -f '{{ .DriverStatus }}'

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Download image
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          name: ${{ needs.build.outputs.image-slug }}
          path: /tmp

      - name: Load image
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker load --input /tmp/image.tar
          docker image ls

      - name: Run checks
        env:
          DQ_CHECKS_IMAGE: "ghcr.io/${{ github.repository }}-dq-checks:${{ needs.build.outputs.image-version }}"
        run: |
          mkdir -p ./data-docs
          sudo chown -R 65532:65532 ./data-docs
          docker run --rm \
            -v ./src:/src:ro \
            -v ./data-docs:/app/gx/uncommitted/:rw \
            -e READ_FROM_DELTA=False \
            -e SPARK_CHECKPOINT_PATH=/tmp \
            -e BUNDLES_DIR=/src/test/java/snapshots/org/miracum/streams/ume/obdstofhir/mapper/mii/ObdsToFhirBundleMapperTest/ \
            "${DQ_CHECKS_IMAGE}"

      - name: Upload data docs
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: gx-data-docs
          path: data-docs/
